'use strict'

// let date = new Date();
// let currentDate = date.getTime();
// let secTime = date.setHours(14, 0, 0, 0);

// function TimeLunch (){
// let res = secTime - currentDate;
// return res;
// }

// let mmsec = TimeLunch();
// // console.log(mmsec);
// let sec = Math.floor((mmsec / 1000) % 60);
// // console.log(sec);
// let min = Math.floor((mmsec / 1000 / 60) % 60);
// // console.log(min);
// let hours = Math.floor(mmsec / (1000 * 60 * 60 * 24));
// // console.log(hours);

// let show = `${hours} ${min} ${sec}`;

// const btn = document.querySelector('#time');
// btn.textContent = show;
//============== задачи ========================
// Часть 1
// ________________
// *События через атрибуты*
// 1. При нажатии на кнопку "Нажми на меня!" - через алерт вывести сообщение "Привет!"
// 2. При наведении на кнопку "Наведи на меня!" - через алерт вывести сообщение "Привет!"
// 3. При двойном нажатии на кнопку "Двойной счелчок по мне!" - через алерт вывести сообщение "Привет!"
// 4. Есть текстовое поле в котором написано "Наведи на меня мышь - а потом убери!". Когда мышка выходит за пределы текстового поля - через алерт вывести сообщение "Привет!"

// *Метод getElementById и работа с атрибутами*
// 5. Есть инпут и кнопка "Нажми на меня!". При заполнения окошка инпут в сплывающем окне должно появляться то, что было напечатано в окошке
// 6. Есть фотография и кнопка "Нажми на меня". По нажатию на кнопку должна появляться другая картинка.

// *Работа с this*
// 7. При нажатии на поле инпут "Нажми на меня!" - текст в инпуте меняеться на "Ой, я поменял текст!"
// 8. При нажатии на поле инпут "Нажми на меня! - через алерт вывести сообщение "Привет!"
// 9. есть input type="submit" с надписью "Нажми на меня!". При нажатии текст на кнопке должен заменится на "Ку-ку".
// 10. есть input type="submit" с надписью "Нажми на меня!". При нажатии текст на кнопке должен заменится на "О, больше на меня не нажать", и кнопка должна стать не активна.
// 11. Есть картинка. при наведении картина меняеться на другую, когда курсор мышки покидает пределы блока с картинкой, начинает отображаться изначальная картинка.
// *Работа с CSS*
// 12. Есть инпут с текстом "ку-ку" и кнопка "Нажми на меня!". При заполнения окошка инпут в сплывающем окне должно появляться то, что было напечатано в окошке
// 13. Есть инпут с текстом "ку-ку" и кнопка "Нажми на меня!" и кнопка "Нажми потом на меня!". При нажатии на кнопку  "Нажми на меня!" - блок-инпут должен исчезать. Потом при нажатии на кнопку "Нажми потом на меня!" блок-инпут должен снова появляться.

// *Задачи*
// 14. *Есть инпут с текстом "ку-ку" и кнопка "Нажми на меня!".  При нажатии на кнопку "Нажми на меня!" - в блоке-инпут  должен меняться текст и цвет текста "Ой, я поменял свой текст и css!"
// 15. *Есть input type="submit" с надписью "Нажми на меня!". При нажатии текст на кнопке должен заменится на "О теперь на меня больше не нажать!", она становиться не активна, и появляется вторая кнопка с надписью "Нажми, что бы отблокировать элемент". При нажатии на  кнопку с надписью "Нажми, что бы отблокировать элемент" - эта кнопка исчезает, и на изначальной кнопке восстанавливаться надпись "Нажми на меня!" и она становиться активной.
// 16. *Создать кнопку с текстом "0". Кнопка считает кол-во нажатий по ней.
// 17. *Есть инпут с текстом "ку-ку" и кнопка "Нажми на меня!" и кнопка "Нажми потом на меня!". При нажатии на кнопку "Нажми на меня!" - в блоке-инпут должено появляться сообщение о том, какие классы были использованы, при создании этого инпута - "Мои css классы: eee www ddd".
// 18.  *Есть инпут без текста и 4 кнопки.
// 1-я кнопка "Я добавляю+", при нажатии на которую в поле инпут появиться знак "+".
// 2-я кнопка "Я добавляю-", при нажатии на которую в поле инпут появиться знак "-".
// 3-я кнопка "Я добавляю/", при нажатии на которую в поле инпут появиться знак "/".
// 4-я кнопка "Я добавляю*", при нажатии на которую в поле инпут появиться знак "*".
// 5-я кнопка "1", при нажатии на которую в поле инпут появиться знак "1"
// ......
// 14-я кнопка "9", при нажатии на которую в поле инпут появиться знак "9"
// Часть 2
// ________________
// 1. Есть HTML-разметка: https://codepen.io/Foxy1337/pen/zpQNQm
// Написать скрипт: при нажатии на кнопку, добавлять в div с идентификатором «container» фрагмент разметки:
// <div class="item">
// <h3>Заголовок</h3>
// <p>текст текст текст</p>
// </div>
// 2. При нажатии на ссылку, равномерно перемещать HTML-элемент с классом .play вправо - https://codepen.io/Foxy1337/pen/NXVjLQ
// 3. * Создать скрипт, который при нажатии на гиперссылку «Добавить» будет показывать в нижней части окна браузера уведомление, подобно тем, которые появляются в социальных сетях при получении сообщения. - https://codepen.io/Foxy1337/pen/OzYgpJ
// 4. При нажатии на гиперссылку менять фоновый цвет элемента с классом .play на прозрачный. Примечание: используйте CSS-свойство opacity. -https://codepen.io/Foxy1337/pen/MrdoVE
// 5. * Познакомьтесь с компонентом Bootstrap — индикатором загрузки (Индикатор загрузки в Bootstrap, видео об индикаторе загрузки в Bootstrap). Создайте скрипт, который будет анимировать изменение показателя индикатора загрузки
// 6. * Создать скрипт, который при нажатии на гиперссылку анимировал движение элемента с классом .play по параболе в ветками вниз.

// const log = function(element){
//    console.log(element);
// }

// for(let i = 0; i <= 10; i++){ 
//    setTimeout(function(){
//       log(i)
//    })
// };

// console.log("Hello world!");
// console.log("Hello world!1");
// console.log("Hello world2!");
// console.log("Hello world!3");
// console.log("Hello world!4");



// let gggg = 1;
// let jjjj = 2;
// function bind1 (context, arch){
//    console.log(context);
//    console.log(arch);   
// }

// bind1('ggg', jjjj );

// const dog = {
//    name: "far",
//    color: "black",
//    age: 3
// }

// const div = document.querySelector('#time');
// const div = document.getElementById('time');
// const div = document.getElementsByTagName('div');
// console.log(div);



