'use strict'
// 1) Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.
// let arr = ['a', 'b', 'c'];
// let array = [1, 2, 3];
// console.log(arr.concat(array));


// 2) Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// let a = ['a', 'b', 'c'];
// a.push(1, 2, 3);
// console.log(a);

// 3) Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let one = [1, 2, 3];
// let two = [4, 5, 6];

// console.log(one.concat(two));

// 4) Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1].
// let arr = [1, 2, 3];
// console.log(arr.reverse());

// 5) Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let arr = [1, 2, 3];
// arr.push(4, 5, 6)
// console.log(arr);

// 6) Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let arr = [1, 2, 3];
// arr.unshift(4, 5, 6)
// console.log(arr);

// 7)  Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let arr = ['js', 'css', 'jq'];
// console.log(arr[0]);

// 8) Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let arr = ['js', 'css', 'jq'];
// console.log(arr[2]);

// 9) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].
// let arr1 = [1, 2, 3, 4, 5];
// let arr2 = arr1.slice(0,3);
// console.log(arr2);
// console.log(arr1);


// 10) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].
// let arr1 = [1, 2, 3, 4, 5];
// let arr2 = arr1.slice(3);
// console.log(arr2);

// 11) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1,2);
// console.log(arr);

// 12)  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
// let arr = [1, 2, 3, 4, 5];
// let arr1 = arr.splice(1,3);
// console.log(arr1);

// 13) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(3,0,'a','b','c');
// console.log(arr);

// 14) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1, 0, 'a', 'b');
// console.log(arr);
// arr.splice(6, 0, 'c');
// console.log(arr);
// arr.splice(8, 0, 'e');
// console.log(arr);

// 15)  Дана строка, состоящая из символов, например, 'abcde'. Проверьте, что первым символом этой строки является буква 'a'. Если это так - выведите 'да', в противном случае выведите 'нет'.
// let a = 'abcde';
// if(a[0] === 'a'){
//    console.log('да');   
// }
// else{
//    console.log('нет');  
// }

// 16)   Дана строка с цифрами, например, '12345'. Проверьте, что первым символом этой строки является цифра 1, 2 или 3. Если это так - выведите 'да', в противном случае выведите 'нет'.
let arr = '12345';
arr.split('');
console.log(arr);


if(arr[0] === '1', '2', '3'){
   console.log('да');   
}
else {
   console.log('нет'); 
}

// 17)   Дана строка из 3-х цифр. Найдите сумму этих цифр. То есть сложите как числа первый символ строки, второй и третий.
// 18)   Дана строка из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'. (edited)
// *Задачи на приемы работы с циклами на JavaScript*
// 1) С помощью цикла for сформируйте строку '123456789' и запишите ее в переменную str.
// 2)  С помощью цикла for сформируйте строку '987654321' и запишите ее в переменную str.
// 3) С помощью цикла for сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную str.
// 4) Сумма элементов двух массивов - Напишите код, который создаёт массив элементов представляющих собой сумму соответствующих элементов заданных массивов.
// [1, 2, 3, 4, 5];
// [4, 5, 6];
// 5) Дан массив mas. Выведите его в формате индекс элемента — значение (через три дефиса). Каждый элемент с новой строки.
// {
//    mas = [15, 'hello', 'trump', 23, 'world', 999, 176];
// }
// 6) Дан массив mas. Выведите его в формате индекс элемента — значение (через дефис). Каждый элемент с новой строки. Выводить нужно те элементы, значение которых больше пяти (5).
// {
//    var mas = [2, 3, 4, 5, 6, 4, 77, 32, 4];
// }
// 7) создайте массив из чисел, примерно 5-10 чисел. Посчитайте сумму числе в массиве. Распечатайте сперва все исходные данные, потом распечатайте сумму чисел в массиве.
// 8) Создайте массив из чисел, примерно 5-10 чисел. Посчитайте массив, в котором каждый элемент это разница между соседними элементами исходного массива. Например первый элемент результирующего массива это разница между вторым и первым элементом исходного массива, второй элемент результирующего массива это разница третьего и второго элемент исх. массива. Распечатайте сперва исходные данные, потом распечатайте результирующим массив.
// 9) Удалить повторяющиеся элементы массива - верните массив, в котором удалены повторяющиеся элементы из массива arr (игнорируйте чувствительность к регистру).
// ["php", "php", "css", "css",
// "script", "script", "html", "html", "java"
// ];
// 10) Переместить элемент массива из одной позиции в другую - замените два соседних элемента в массиве.
// 11) Массив указанной длины - напишите скрипт который генерирует массив заданной длины 4, заполненный целыми числами, где каждое число больше предыдущего на единицу.
// 12)     Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти.
// 13)  Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.
// *На цикл в цикле.*
// 12) Выведите на экран таблицу умножения (как в школьной тетради).
// 13) Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее. Показать решение.
// 14) Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.
// *Многомерные массивы*
// 15) Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.
// 16) Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.
// *На флаги*
// 17) Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.
// 18) Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.
// 19) Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'. (edited)
// Задачи javascript на циклы
// Задание 1 Вывести числа от 4 до 400 на экран.
// Задание 2 Вывести числа в последовательности: 4 7 10 13 с помощью цикла.
// Задание 3 Вывести числа 654 653 652 до нуля.
// Задание 4 Вывести все годы с 1983 до 2017.
// Задание 5 Вывести числа -4 -2 0 2 4 6 ...100.
// Задание 6 С помощью цикла напечатайте таблицу умножения на 7 от 1 до 9.
// Задание 7 Выведите с помощью цикла коды спецсимволов от 1000 до 2000. Напомню, что спецсимвол получается комбинацией &#число; Например &#1222;
// Задание 8 Дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла), и запишите его в переменную num
// Задание 9 Найти факториал числа, у пользователя запрашивается число, и в результате выдаётся факториал числа,(если ввести к примеру 5 то результат должен быть равен 120,
// потому что факториал 5 это 5*4*3*2*1)
// Задание 10 Найти последовательность Хэеса, то есть пользователь вводит число и в результате должно быть выдано сообщение, с самой последовательностью, количеством шагов,
// которое понадобилось для нахождения этой последовательности, и вершиной последовательности, это максимальное число из этой последовательности. Последовательность
// Хэеса считается так: если ввели число 9, то проверяем его, если оно чётное, делим на 2, если нечетное, умножаем на 3 и прибавляем 1, и так до тех пор пока число не
// будет равно 1.
// 9*3+1=28
// 28/2=14
// 14/2=7
// 7*3+1=22
// 22/2=11
// 11*3+1=34
// 34/2=17
// 17*3+1=52
// 52/2=26
// 26/2=13
// 13*3+1=40
// 40/2=20
// 20/2=10
// 10/2=5
// 5*3+1=16
// 16/2=8
// 8/2=4
// 4/2=2
// 2/2=1

/*
4.Пользователь вводит подряд 20 разных чисел(ввод осуществляется всех чисел только в 1 переменную),нужно посчитать сколько было инверсий. Пример:
5 2 5 3 6 4 8 9 2 4 1 6 8 5 4 7 9 7 1 5 = 9 инверсий, к примеру 5 2 - это инверсия то есть то число которое стоит слева больше того числа которое справа.
*/

/*
5.Пользователь вводит диапазон нужно вывести на экран все простые числа из этого диапазона. Простыми числами называются числа, которые имеют всего 2 делителя, то есть
делятся только на 1 и на самого себя! Пример простых чисел: 3,5,7,11,13,17,...

1. Посчитать сумму нечётных элементов массива.
2. Найти сумму элементов массива, элементы которого находятся между крайними отрицательными значениями.
3. Поменять местами элементы массива попарно.
4. Добавить отрицательный элемент массива в случайную позицию в массиве, затем слева от отрицательного элемента , отсортировать элементы по возрастанию, не затрагивая сам отрицательный элемент, а справа по убыванию, так же не затрагивая отрицательный элемент.
5. Посчитать в строке сколько букв, цифр и других символов.
6. Есть массив строк, найти в этом массиве самую короткую строку.
*/


/*
6. Дано произвольное целое число n. Написать программу, которая
разбивает число n на цифры и выводит их на экран;
подсчитывает сколько цифр в числе n;
находит сумму цифр числа n;
меняет порядок цифр числа n на обратный.
Пример: ввожу число 123
цифр в числе = 3
сумма = 6(это значение получили следующим образом 1+2+3)
обратный порядок = 321
*/
 